// Code generated by MockGen. DO NOT EDIT.
// Source: ./jwt.go

// Package mockgen is a generated GoMock package.
package mockgen

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockJwtServicer is a mock of JwtServicer interface.
type MockJwtServicer struct {
	ctrl     *gomock.Controller
	recorder *MockJwtServicerMockRecorder
}

// MockJwtServicerMockRecorder is the mock recorder for MockJwtServicer.
type MockJwtServicerMockRecorder struct {
	mock *MockJwtServicer
}

// NewMockJwtServicer creates a new mock instance.
func NewMockJwtServicer(ctrl *gomock.Controller) *MockJwtServicer {
	mock := &MockJwtServicer{ctrl: ctrl}
	mock.recorder = &MockJwtServicerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJwtServicer) EXPECT() *MockJwtServicerMockRecorder {
	return m.recorder
}

// GenerateToken mocks base method.
func (m *MockJwtServicer) GenerateToken(userId uint, role string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateToken", userId, role)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateToken indicates an expected call of GenerateToken.
func (mr *MockJwtServicerMockRecorder) GenerateToken(userId, role interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateToken", reflect.TypeOf((*MockJwtServicer)(nil).GenerateToken), userId, role)
}
