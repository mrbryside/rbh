// Code generated by MockGen. DO NOT EDIT.
// Source: ./auth.go

// Package mockgen is a generated GoMock package.
package mockgen

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	user "github.com/mrbryside/rbh/domain/user/domain/user"
)

// MockAuthServicer is a mock of AuthServicer interface.
type MockAuthServicer struct {
	ctrl     *gomock.Controller
	recorder *MockAuthServicerMockRecorder
}

// MockAuthServicerMockRecorder is the mock recorder for MockAuthServicer.
type MockAuthServicerMockRecorder struct {
	mock *MockAuthServicer
}

// NewMockAuthServicer creates a new mock instance.
func NewMockAuthServicer(ctrl *gomock.Controller) *MockAuthServicer {
	mock := &MockAuthServicer{ctrl: ctrl}
	mock.recorder = &MockAuthServicerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthServicer) EXPECT() *MockAuthServicerMockRecorder {
	return m.recorder
}

// GetById mocks base method.
func (m *MockAuthServicer) GetById(id uint) (user.Aggregate, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetById", id)
	ret0, _ := ret[0].(user.Aggregate)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetById indicates an expected call of GetById.
func (mr *MockAuthServicerMockRecorder) GetById(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetById", reflect.TypeOf((*MockAuthServicer)(nil).GetById), id)
}

// Login mocks base method.
func (m *MockAuthServicer) Login(email, password string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Login", email, password)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Login indicates an expected call of Login.
func (mr *MockAuthServicerMockRecorder) Login(email, password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Login", reflect.TypeOf((*MockAuthServicer)(nil).Login), email, password)
}

// Register mocks base method.
func (m *MockAuthServicer) Register(name, email, password string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Register", name, email, password)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Register indicates an expected call of Register.
func (mr *MockAuthServicerMockRecorder) Register(name, email, password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockAuthServicer)(nil).Register), name, email, password)
}
